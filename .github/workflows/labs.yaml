name: Labs
on:
  push:
  workflow_call:
jobs:
  syntax:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Lab1 => steps/10-syntax-lab1-action-input/testing-workflow.yaml
      - name: Lab1 - default run
        uses: ./steps/10-syntax-lab1-action-input-solution
      - name: Lab1 - custom run
        uses: ./steps/10-syntax-lab1-action-input-solution
        with:
          say: GitHub Action Rocks
          eyes: oo

      # Lab2 => steps/10-syntax-lab2-action-output/testing-workflow.yaml
      - name: Lab2 - run
        id: upper_action
        uses: ./steps/10-syntax-lab2-action-output-solution
        with:
          text: GitHub Action Rocks
      - name: Lab2 - output usage
        run: |
          echo "::notice ::${{ steps.upper_action.outputs.upper_text }}"

  testing:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive

      # Lab1 solution => steps/30-testing-lab1-action-shell-testing/testing-workflow.yaml
      - run: |
          mv steps/30-testing-lab1-action-shell-testing/scripts steps/30-testing-lab1-action-shell-testing-solution/scripts
          git submodule add https://github.com/bats-core/bats-core.git steps/30-testing-lab1-action-shell-testing-solution/tests/bats
          git submodule add https://github.com/bats-core/bats-assert.git steps/30-testing-lab1-action-shell-testing-solution/tests/test_helper/bats-assert
          git submodule add https://github.com/bats-core/bats-support.git steps/30-testing-lab1-action-shell-testing-solution/tests/test_helper/bats-support
        shell: bash
      - run: |
          ${GITHUB_WORKSPACE}/tests/bats/bin/bats ${GITHUB_WORKSPACE}/steps/30-testing-lab1-action-shell-testing-solution/tests/lab-tests.bats
        shell: bash
